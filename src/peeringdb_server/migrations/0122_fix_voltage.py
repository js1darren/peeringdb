# Generated by Django 4.2.7 on 2024-01-09 13:35

from django.db import migrations


def forward(apps, schema_editor):
    Facility = apps.get_model("peeringdb_server", "Facility")
    updated_field = Facility._meta.get_field("updated")
    updated_field_auto_now = updated_field.auto_now
    updated_field.auto_now = False

    invalid_voltage_values = ["120 VAC", "208 VAC", "240 VAC"]

    for facility in Facility.handleref.all():
        voltage = facility.available_voltage_services
        removed = []

        for invalid_voltage_value in invalid_voltage_values:
            try:
                _removed = voltage.remove(invalid_voltage_value)
                removed.append(invalid_voltage_value)
            except ValueError:
                pass

        if removed:
            facility.available_voltage_services = voltage
            print(f"Removed {removed} from {facility}")
            facility.save()

    updated_field.auto_now = updated_field_auto_now


class Migration(migrations.Migration):
    dependencies = [
        ("peeringdb_server", "0121_alter_field_setting_on_environmentsetting"),
    ]

    operations = [
        migrations.RunPython(forward, migrations.RunPython.noop),
    ]
